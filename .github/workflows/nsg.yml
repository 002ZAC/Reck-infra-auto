name: ARM Template 

on:
  push:
    branches:
      - none
  workflow_dispatch:

jobs:
  NSG_Deployment:
    runs-on: ubuntu-latest
    if: ${{ vars.INFRA_NSG_RULE == 'YES' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: NSG_Deployment_Install
      run: |
        az login --service-principal -u ${{ secrets.SERVICE_PRINCIPAL_ID }} -p ${{ secrets.SERVICE_PRINCIPAL_KEY }} --tenant ${{ secrets.TENANT_ID }}
        deploymentName='MyDeployment'
            sed -i "s|{{.nsg-name}}|${{ vars.NSG_NAME }}|" nsg-create.json
            sed -i "s|{{.vnet-name}}|${{ vars.VNET_NAME }}|" nsg-create.json
            sed -i "s|{{.subnet-name}}|${{ vars.SUBNET_NAME }}|" nsg-create.json
            sed -i "s|{{.subnet-ip}}|${{ vars.SUBNET_IP }}|" nsg-create.json                    
            sed -i "s|{{.location}}|${{ vars.LOCATION_NAME }}|" nsg-create.json
            cat nsg-create.json
            az deployment group create --resource-group ${{ vars.RESOURCEGROUP_NAME }} --name $deploymentName --template-file nsg-create.json
